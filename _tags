# OASIS_START
# DO NOT EDIT (digest: e50e2e86ba7444d00de73a2b492ea21c)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library re
"lib/re.cmxs": use_re
# Library re_unicode
"lib/re_unicode.cmxs": use_re_unicode
# Library re_emacs
"lib/re_emacs.cmxs": use_re_emacs
# Library re_str
"lib/re_str.cmxs": use_re_str
<lib/*.ml{,i,y}>: use_re_emacs
# Library re_posix
"lib/re_posix.cmxs": use_re_posix
# Library re_glob
"lib/re_glob.cmxs": use_re_glob
# Library re_perl
"lib/re_perl.cmxs": use_re_perl
# Library re_pcre
"lib/re_pcre.cmxs": use_re_pcre
<lib/*.ml{,i,y}>: pkg_bytes
<lib/*.ml{,i,y}>: use_re
<lib/*.ml{,i,y}>: use_re_perl
# Library fort_unit
"lib_test/fort_unit.cmxs": use_fort_unit
# Executable re_match
<lib_test/re_match.{native,byte}>: pkg_bytes
<lib_test/re_match.{native,byte}>: use_re
<lib_test/re_match.{native,byte}>: custom
# Executable re_test_re
<lib_test/test_re.{native,byte}>: pkg_bytes
<lib_test/test_re.{native,byte}>: pkg_oUnit
<lib_test/test_re.{native,byte}>: use_fort_unit
<lib_test/test_re.{native,byte}>: use_re
<lib_test/test_re.{native,byte}>: custom
# Executable re_test_perl
<lib_test/test_perl.{native,byte}>: pkg_bytes
<lib_test/test_perl.{native,byte}>: pkg_oUnit
<lib_test/test_perl.{native,byte}>: use_fort_unit
<lib_test/test_perl.{native,byte}>: use_re
<lib_test/test_perl.{native,byte}>: custom
# Executable re_test_emacs
<lib_test/test_emacs.{native,byte}>: pkg_bytes
<lib_test/test_emacs.{native,byte}>: pkg_oUnit
<lib_test/test_emacs.{native,byte}>: use_fort_unit
<lib_test/test_emacs.{native,byte}>: use_re
<lib_test/test_emacs.{native,byte}>: custom
# Executable re_test_str
<lib_test/test_str.{native,byte}>: pkg_bytes
<lib_test/test_str.{native,byte}>: pkg_oUnit
<lib_test/test_str.{native,byte}>: pkg_str
<lib_test/test_str.{native,byte}>: use_fort_unit
<lib_test/test_str.{native,byte}>: use_re
<lib_test/*.ml{,i,y}>: pkg_str
<lib_test/*.ml{,i,y}>: use_fort_unit
<lib_test/test_str.{native,byte}>: custom
# Executable test_pcre
<lib_test/test_pcre.{native,byte}>: pkg_bytes
<lib_test/test_pcre.{native,byte}>: pkg_oUnit
<lib_test/test_pcre.{native,byte}>: use_re
<lib_test/test_pcre.{native,byte}>: custom
# Executable test_easy
<lib_test/test_easy.{native,byte}>: pkg_bytes
<lib_test/test_easy.{native,byte}>: pkg_oUnit
<lib_test/test_easy.{native,byte}>: use_re
<lib_test/*.ml{,i,y}>: pkg_bytes
<lib_test/*.ml{,i,y}>: pkg_oUnit
<lib_test/*.ml{,i,y}>: use_re
<lib_test/test_easy.{native,byte}>: custom
# Executable make_unicode_tables
"tools/make_unicode_tables.byte": pkg_bytes
"tools/make_unicode_tables.byte": pkg_uucd
"tools/make_unicode_tables.byte": use_re
<tools/*.ml{,i,y}>: pkg_bytes
<tools/*.ml{,i,y}>: pkg_uucd
<tools/*.ml{,i,y}>: use_re
"tools/make_unicode_tables.byte": custom
# OASIS_STOP

#true: safe_string
